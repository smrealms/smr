<ruleset>
    <!-- Show (p)rogress and (s)niff codes. -->
    <arg value="ps" />
    <arg name="basepath" value="." />
    <arg name="colors" />
    <arg name="parallel" value="32" />
    <config name="memory_limit" value="4G" />

    <file>src/</file>
    <file>test/</file>

    <rule ref="vendor/fig-r/psr2r-sniffer/PSR2R/ruleset.xml">
        <!-- Do not require trait names to end in "Trait". -->
        <exclude name="PSR2R.Classes.TraitName" />

        <!-- We do not expect every method/class to have a docstring. -->
        <exclude name="PSR2R.Commenting.DocBlock" />

        <!-- We do not expect every docstring to document all params. -->
        <exclude name="PSR2R.Commenting.DocBlockParam" />

        <!-- Allow more compact docstrings (i.e. single line @var). -->
        <exclude name="PSR2R.Commenting.DocComment" />

        <!-- Erroneous sniff. Static and self are not interchangeable. -->
        <exclude name="PSR2R.PHP.PreferStaticOverSelf" />

        <!-- Personal preference for parentheses around require/echo. -->
        <exclude name="PSR2R.WhiteSpace.LanguageConstructSpacing" />

        <!-- Allow more compact property doc comments. -->
        <exclude name="SlevomatCodingStandard.Commenting.DisallowOneLinePropertyDocComment" />

        <!-- Jump statements on a single line can help keep code compact. -->
        <exclude name="SlevomatCodingStandard.ControlStructures.JumpStatementsSpacing" />

        <!-- Erroneous sniff. Disables a real language feature. -->
        <exclude name="SlevomatCodingStandard.TypeHints.NullableTypeForNullDefaultValue" />

        <!-- We do not demand that all constants have a docstring. -->
        <exclude name="Spryker.Commenting.DocBlockConst" />

        <!-- Docstring for return void is redundant with typehint. -->
        <exclude name="Spryker.Commenting.DocBlockReturnVoid" />

        <!-- We do not expect that all class vars have a docstring. -->
        <exclude name="Spryker.Commenting.DocBlockVar" />

        <!-- Prevents compact class declarations. -->
        <exclude name="Squiz.WhiteSpace.MemberVarSpacing" />
    </rule>

    <!-- Add sniffs not included by PSR2R. -->
    <rule ref="SlevomatCodingStandard.TypeHints.DeclareStrictTypes">
        <properties>
            <property name="declareOnFirstLine" value="true" />
            <property name="spacesCountAroundEqualsSign" value="0" />
        </properties>
    </rule>
    <rule ref="SlevomatCodingStandard.Variables.UnusedVariable">
        <properties>
            <property name="ignoreUnusedValuesWhenOnlyKeysAreUsedInForeach" value="true" />
        </properties>
    </rule>
    <rule ref="SlevomatCodingStandard.Variables.UselessVariable" />

    <!-- Use more compact arrow functions, "fn()" instead of "fn ()". -->
    <rule ref="SlevomatCodingStandard.Functions.ArrowFunctionDeclaration">
        <properties>
            <property name="spacesCountAfterKeyword" value="0" />
        </properties>
    </rule>

    <!-- Allow more compact property doc comments. -->
    <rule ref="SlevomatCodingStandard.Classes.PropertySpacing">
        <properties>
            <property name="minLinesCountBeforeWithComment" value="0" />
        </properties>
    </rule>

    <!-- PHP/HTML intermixing in templates breaks indentation depth calculation. -->
    <rule ref="Generic.WhiteSpace.ScopeIndent">
        <exclude-pattern>src/templates/*</exclude-pattern>
    </rule>

    <!-- Inline control structures useful in templates for HTML formatting. -->
    <rule ref="PEAR.ControlStructures.ControlSignature">
        <exclude-pattern>src/templates/*</exclude-pattern>
    </rule>
    <rule ref="Generic.ControlStructures.InlineControlStructure">
        <exclude-pattern>src/templates/*</exclude-pattern>
    </rule>
    <rule ref="Spryker.ControlStructures.NoInlineAssignment">
        <exclude-pattern>src/templates/*</exclude-pattern>
    </rule>

    <!-- Ignore unknown docstring tags. -->
    <rule ref="PSR2R.Commenting.DocBlockTagTypes.Unknown">
        <severity>0</severity>
    </rule>

    <!-- Ignore unknown docstring types. -->
    <rule ref="Spryker.Commenting.DocBlockParamAllowDefaultValue.Typehint">
        <severity>0</severity>
    </rule>

    <!-- This suppression allows "assignment by reference" to be written so as
      to clearly indicate that it is not "assignment of a reference", i.e. to
      allow "$a =& $b" instead of "$a = &$b". -->
    <rule ref="PSR2R.WhiteSpace.UnaryOperatorSpacing.WrongSpace">
        <severity>0</severity>
    </rule>

    <!-- PHPUnit convention is snake_case for test methods. -->
    <rule ref="PSR1.Methods.CamelCapsMethodName">
        <exclude-pattern>test/*</exclude-pattern>
    </rule>

    <!-- Spryker sniffs do not support nullable typehints in docblocks.
      See https://github.com/spryker/code-sniffer/issues/349. -->
    <rule ref="Spryker.Commenting.DocBlockParamAllowDefaultValue.Default">
        <severity>0</severity>
    </rule>
    <rule ref="Spryker.Commenting.DocBlockReturnNullableType.ReturnNullableMissing">
        <severity>0</severity>
    </rule>

    <!-- Conflicts with PSR2R.Namespaces.NoInlineFullyQualifiedClassName.Signature -->
    <rule ref="Spryker.Commenting.Attributes.ExpectedFQCN">
        <severity>0</severity>
    </rule>

    <!-- Allow assignment in else-if where it is really needed. -->
    <rule ref="SlevomatCodingStandard.ControlStructures.AssignmentInCondition">
        <exclude-pattern>src/templates/Default/engine/Default/alliance_roster\.php</exclude-pattern>
    </rule>

    <!-- Ignore unused variable warnings for bad global variables. Fix ASAP! -->
    <rule ref="SlevomatCodingStandard.Variables.UnusedVariable">
        <exclude-pattern>src/tools/npc/chess\.php</exclude-pattern>
        <exclude-pattern>src/tools/irc/irc\.php</exclude-pattern>
        <exclude-pattern>src/tools/npc/npc\.php</exclude-pattern>
    </rule>

    <!-- Ignore bug in PSR12. Will be fixed in PHP_CodeSniffer 3.7.2.
      See https://github.com/squizlabs/PHP_CodeSniffer/pull/3653. -->
    <rule ref="PSR12.Operators.OperatorSpacing">
        <exclude-pattern>src/lib/Smr/Chess/ChessPiece\.php</exclude-pattern>
    </rule>
</ruleset>
